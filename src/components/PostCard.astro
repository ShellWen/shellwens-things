---
import FormattedDate from '@/components/FormattedDate.astro'
import { Icon } from 'astro-icon/components'
import type { CollectionEntry } from 'astro:content'
import type { HTMLAttributes } from 'astro/types'
import { render } from 'astro:content'
import AppPicture from './AppPicture.astro'
interface Props extends HTMLAttributes<'a'> {
  post: CollectionEntry<'post'>
}

const { post, class: className = '', ...rest } = Astro.props

const { remarkPluginFrontmatter } = await render(post)
const minutesRead = (remarkPluginFrontmatter.minutesRead as string | undefined) ?? ''
---

<a
  href={`/blog/${post.data.category.id}/${post.id}/`}
  class={`card shadow-md dark:bg-base-200 dark:shadow-none ${className ?? ''}`}
  {...rest}
>
  <figure class="w-[var(--figure-width)] flex-shrink-0">
    <AppPicture
      src={post.data.heroImage}
      alt={post.data.heroImageAlt ?? ''}
      class="h-full object-cover"
      transition:name={`hero-image-${post.id}`}
    />
  </figure>
  <div class="card-body">
    <h4 class="card-title" transition:name={`title-${post.id}`}>
      {post.data.title}
    </h4>
    <p>
      <span transition:name={`description-${post.id}`}>
        {post.data.description}
      </span>

      <div class="flex flex-row flex-wrap gap-2">
        <div transition:name={`pub-date-${post.id}`} class="tooltip" data-tip="最初发布日期">
          <Icon name="material-symbols:calendar-today" class="inline-block" />
          <FormattedDate date={post.data.pubDate} />
        </div>
        <div transition:name={`updated-date-${post.id}`} class="tooltip" data-tip="上次更新日期">
          <Icon name="material-symbols:history" class="inline-block" />
          <FormattedDate date={post.data.pubDate} />
        </div>
        <div transition:name={`minutes-read-${post.id}`} class="tooltip" data-tip="预计阅读时间">
          <Icon name="material-symbols:timer" class="inline-block" />
          {minutesRead}
        </div>
      </div>
    </p>
  </div>
</a>
